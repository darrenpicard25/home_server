name: "Build Test and Deploy to Production"

on:
  push:
    branches:
      - main

env:
  SQLX_OFFLINE: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      user_service: ${{ steps.filter.outputs.user_service }}
      beer_service: ${{ steps.filter.outputs.beer_service }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            user_service:
              - 'user_service/**'
            beer_service:
              - 'beer_service/**'

  user_service_build:
    needs: changes
    if: ${{ needs.changes.outputs.user_service == 'true' }}
    uses: ./.github/workflows/build-publish.yml
    with:
      service-name: "user_service"
    secrets:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  beer_service_build:
    needs: changes
    if: ${{ needs.changes.outputs.beer_service == 'true' }}
    uses: ./.github/workflows/build-publish.yml
    with:
      service-name: "beer_service"
    secrets:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    needs: [user_service_build, beer_service_build]
    if: |
      always() &&
      (needs.user_service_build.result == 'success' || needs.user_service_build.result == 'skipped') &&
      (needs.beer_service_build.result == 'success' || needs.beer_service_build.result == 'skipped')

    uses: ./.github/workflows/deploy.yml

    inputs:
      DROPLET_IP: ${{ vars.DROPLET_IP }}
      DROPLET_USER: ${{ vars.DROPLET_USER }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
    secrets:
      DROPLET_SSH_PRIVATE_KEY: ${{ secrets.DROPLET_SSH_PRIVATE_KEY }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
